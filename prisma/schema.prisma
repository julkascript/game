generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Character {
  id                String              @id @default(cuid())
  name              String
  title             String
  picture           String
  description       String?
  SelectedCharacter SelectedCharacter[]
  Ability           Ability[]
}

model SelectedCharacter {
  id          String    @id @default(cuid())
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
}

model Ability {
  id              String            @id @default(cuid())
  name            String
  description     String
  isActive        Boolean           @default(true)
  isTargeted      Boolean           @default(true)
  effect          String
  character       Character         @relation(fields: [characterId], references: [id])
  characterId     String
  SelectedAbility SelectedAbility[]
}

model SelectedAbility {
  id        String  @id @default(cuid())
  ability   Ability @relation(fields: [abilityId], references: [id])
  abilityId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
}

model User {
  id                String              @id @default(cuid())
  username          String              @unique
  password          String
  email             String              @unique
  createdAt         DateTime            @default(now()) @map(name: "created_at")
  updatedAt         DateTime            @updatedAt @map(name: "updated_at")
  SelectedCharacter SelectedCharacter[]
  SelectedAbility   SelectedAbility[]
  matches           Match[]
  Queue             Queue?              @relation(fields: [queueId], references: [id])
  queueId           String?

  // rating            Int                 @default(0)
  @@map(name: "users")
}

model Match {
  id         String  @id @default(cuid())
  players    User[]
  turn       Int     @default(0)
  isFinished Boolean @default(false)
}

model Queue {
  id    String @id @default(cuid())
  users User[]
}
